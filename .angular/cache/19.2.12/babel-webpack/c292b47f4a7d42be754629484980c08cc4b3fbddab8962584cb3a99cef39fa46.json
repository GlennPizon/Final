{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nexport class AuthGuard {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    }\n    // Store the attempted URL for redirecting\n    this.router.navigate(['/account/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","router","authService","canActivate","route","state","isAuthenticated","navigate","queryParams","returnUrl","url","i0","ɵɵinject","i1","Router","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\rambo\\OneDrive\\Desktop\\cudillo-frontend\\frontend-cudillo\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (this.authService.isAuthenticated()) {\r\n      return true;\r\n    }\r\n\r\n    // Store the attempted URL for redirecting\r\n    this.router.navigate(['/account/login'], {\r\n      queryParams: { returnUrl: state.url }\r\n    });\r\n    return false;\r\n  }\r\n} "],"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EACpBC,YACUC,MAAc,EACdC,WAAwB;IADxB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;EAClB;EAEHC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,IAAI,CAACH,WAAW,CAACI,eAAe,EAAE,EAAE;MACtC,OAAO,IAAI;IACb;IAEA;IACA,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EAAE;MACvCC,WAAW,EAAE;QAAEC,SAAS,EAAEJ,KAAK,CAACK;MAAG;KACpC,CAAC;IACF,OAAO,KAAK;EACd;;;uCAnBWX,SAAS,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAATjB,SAAS;MAAAkB,OAAA,EAATlB,SAAS,CAAAmB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}