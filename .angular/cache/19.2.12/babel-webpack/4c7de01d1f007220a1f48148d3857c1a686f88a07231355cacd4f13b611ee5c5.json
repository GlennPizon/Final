{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AccountModalComponent } from './account-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/account.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/common\";\nfunction AccountsListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"span\", 8);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 8);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AccountsListComponent_tr_23_Template_button_click_16_listener() {\n      const account_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editAccount(account_r2));\n    });\n    i0.ɵɵelement(17, \"i\", 10);\n    i0.ɵɵtext(18, \" Edit \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const account_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", account_r2.role === \"admin\" ? \"bg-danger\" : \"bg-primary\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", account_r2.role, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", account_r2.status === \"active\" ? \"bg-success\" : \"bg-secondary\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", account_r2.status, \" \");\n  }\n}\nexport class AccountsListComponent {\n  constructor(accountService, modalService) {\n    this.accountService = accountService;\n    this.modalService = modalService;\n    this.accounts = [{\n      id: 1,\n      title: 'Mr.',\n      firstName: 'John',\n      lastName: 'Doe',\n      email: 'john.doe@example.com',\n      role: 'admin',\n      status: 'active'\n    }];\n  }\n  ngOnInit() {\n    this.loadAccounts();\n  }\n  loadAccounts() {\n    this.accountService.getAccounts().subscribe(accounts => this.accounts = accounts);\n  }\n  openAccountModal(account) {\n    const modalRef = this.modalService.open(AccountModalComponent, {\n      size: 'lg'\n    });\n    if (account) {\n      modalRef.componentInstance.account = account;\n    }\n    modalRef.result.then(result => {\n      this.loadAccounts();\n    }, reason => {\n      // Modal dismissed\n    });\n  }\n  editAccount(account) {\n    this.openAccountModal(account);\n  }\n  deleteAccount(account) {\n    if (confirm('Are you sure you want to delete ' + account.firstName + ' ' + account.lastName + '\\'s account?')) {\n      this.accountService.deleteAccount(account.id).subscribe(() => {\n        this.loadAccounts();\n      });\n    }\n  }\n  static {\n    this.ɵfac = function AccountsListComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AccountsListComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.NgbModal));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountsListComponent,\n      selectors: [[\"app-accounts-list\"]],\n      decls: 28,\n      vars: 1,\n      consts: [[1, \"container-fluid\", \"py-3\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-3\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-end\", \"mt-3\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"bi\", \"bi-plus\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 3, \"click\"], [1, \"bi\", \"bi-pencil\"]],\n      template: function AccountsListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3, \"Accounts\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"table\", 3)(6, \"thead\")(7, \"tr\")(8, \"th\");\n          i0.ɵɵtext(9, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\");\n          i0.ɵɵtext(11, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"th\");\n          i0.ɵɵtext(13, \"Last Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"th\");\n          i0.ɵɵtext(15, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"th\");\n          i0.ɵɵtext(17, \"Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"th\");\n          i0.ɵɵtext(19, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"th\");\n          i0.ɵɵtext(21, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(22, \"tbody\");\n          i0.ɵɵtemplate(23, AccountsListComponent_tr_23_Template, 19, 8, \"tr\", 4);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"div\", 5)(25, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function AccountsListComponent_Template_button_click_25_listener() {\n            return ctx.openAccountModal();\n          });\n          i0.ɵɵelement(26, \"i\", 7);\n          i0.ɵɵtext(27, \" Add Account \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(23);\n          i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n        }\n      },\n      dependencies: [CommonModule, i3.NgClass, i3.NgForOf, ReactiveFormsModule, NgbModule],\n      styles: [\".badge[_ngcontent-%COMP%] {\\n      text-transform: capitalize;\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2FjY291bnRzL2FjY291bnRzLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7SUFDSTtNQUNFLDBCQUEwQjtJQUM1QiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC5iYWRnZSB7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","NgbModule","AccountModalComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AccountsListComponent_tr_23_Template_button_click_16_listener","account_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","editAccount","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","title","firstName","lastName","email","ɵɵproperty","role","ɵɵtextInterpolate1","status","AccountsListComponent","constructor","accountService","modalService","accounts","id","ngOnInit","loadAccounts","getAccounts","subscribe","openAccountModal","account","modalRef","open","size","componentInstance","result","then","reason","deleteAccount","confirm","ɵɵdirectiveInject","i1","AccountService","i2","NgbModal","selectors","decls","vars","consts","template","AccountsListComponent_Template","rf","ctx","ɵɵtemplate","AccountsListComponent_tr_23_Template","AccountsListComponent_Template_button_click_25_listener","i3","NgClass","NgForOf","styles"],"sources":["C:\\Users\\rambo\\OneDrive\\Desktop\\cudillo-frontend\\frontend-cudillo\\src\\app\\pages\\dashboard\\accounts\\accounts-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Account } from '../../../models/account.model';\r\nimport { AccountService } from '../../../services/account.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AccountModalComponent } from './account-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-accounts-list',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    AccountModalComponent\r\n  ],\r\n  template: `\r\n    <div class=\"container-fluid py-3\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <h2>Accounts</h2>\r\n      </div>\r\n\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-striped table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Role</th>\r\n              <th>Status</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let account of accounts\">\r\n              <td>{{ account.title }}</td>\r\n              <td>{{ account.firstName }}</td>\r\n              <td>{{ account.lastName }}</td>\r\n              <td>{{ account.email }}</td>\r\n              <td>\r\n                <span class=\"badge\" [ngClass]=\"account.role === 'admin' ? 'bg-danger' : 'bg-primary'\">\r\n                  {{ account.role }}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span class=\"badge\" [ngClass]=\"account.status === 'active' ? 'bg-success' : 'bg-secondary'\">\r\n                  {{ account.status }}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"editAccount(account)\">\r\n                  <i class=\"bi bi-pencil\"></i> Edit\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div class=\"d-flex justify-content-end mt-3\">\r\n        <button class=\"btn btn-primary\" (click)=\"openAccountModal()\">\r\n          <i class=\"bi bi-plus\"></i> Add Account\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .badge {\r\n      text-transform: capitalize;\r\n    }\r\n  `]\r\n})\r\nexport class AccountsListComponent implements OnInit {\r\n  accounts: Account[] = [\r\n    {\r\n      id: 1,\r\n      title: 'Mr.',\r\n      firstName: 'John',\r\n      lastName: 'Doe',\r\n      email: 'john.doe@example.com',\r\n      role: 'admin',\r\n      status: 'active'\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadAccounts();\r\n  }\r\n\r\n  loadAccounts() {\r\n    this.accountService.getAccounts().subscribe(\r\n      accounts => this.accounts = accounts\r\n    );\r\n  }\r\n\r\n  openAccountModal(account?: Account) {\r\n    const modalRef = this.modalService.open(AccountModalComponent, { size: 'lg' });\r\n    if (account) {\r\n      modalRef.componentInstance.account = account;\r\n    }\r\n\r\n    modalRef.result.then((result) => {\r\n      this.loadAccounts();\r\n    }, (reason) => {\r\n      // Modal dismissed\r\n    });\r\n  }\r\n\r\n  editAccount(account: Account) {\r\n    this.openAccountModal(account);\r\n  }\r\n\r\n  deleteAccount(account: Account) {\r\n    if (confirm('Are you sure you want to delete ' + account.firstName + ' ' + account.lastName + '\\'s account?')) {\r\n      this.accountService.deleteAccount(account.id).subscribe(() => {\r\n        this.loadAccounts();\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}