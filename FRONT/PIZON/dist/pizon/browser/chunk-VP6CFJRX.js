import{a as m,aa as c,b,c as C,d as x,f as v,g as U,h as D,j as R,l as y,m as H,n as s,p as n,ua as B,xa as k}from"./chunk-Y3NWWHFQ.js";var i={production:!1,apiUrl:"http://localhost:7000"};var p=`${i.apiUrl}/accounts`,w=class o{constructor(t,e){this.router=t;this.http=e;this.accountSubject=new x(JSON.parse(localStorage.getItem("account")??"null")),this.account=this.accountSubject.asObservable()}accountSubject;account;get accountValue(){return this.accountSubject.value}login(t,e){return this.http.post(`${p}/authenticate`,{email:t,password:e},{withCredentials:!0}).pipe(v(r=>(this.accountSubject.next(r),this.startRefreshTokenTimer(),r)))}logout(){this.http.post(`${p}/revoke-token`,{},{withCredentials:!0}).subscribe(),this.stopRefreshTokenTimer(),this.accountSubject.next(null),this.router.navigate(["/account/login"])}refreshToken(){return this.http.post(`${p}/refresh-token`,{},{withCredentials:!0}).pipe(v(t=>(this.accountSubject.next(t),this.startRefreshTokenTimer(),t)))}register(t){return this.http.post(`${p}/register`,t)}forgotPassword(t){return this.http.post(`${p}/forgot-password`,{email:t})}validateResetToken(t){return this.http.post(`${p}/validate-reset-token`,{token:t})}resetPassword(t,e,r){return this.http.post(`${p}/reset-password`,{token:t,password:e,confirmPassword:r})}getAll(){return this.http.get(p)}getById(t){return this.http.get(`${p}/${t}`)}create(t){return this.http.post(p,t)}update(t,e){return this.http.put(`${p}/${t}`,e).pipe(v(r=>(r.id===this.accountValue.id&&(r=m(m({},this.accountValue),r),this.accountSubject.next(r)),r)))}delete(t){return this.http.delete(`${p}/${t}`).pipe(R(()=>{this.accountValue&&t===this.accountValue.id&&this.logout()}))}refreshTokenTimeout;startRefreshTokenTimer(){if(this.accountValue&&this.accountValue.jwtToken){let t=JSON.parse(atob(this.accountValue.jwtToken.split(".")[1]));if(t&&t.exp){let r=new Date(t.exp*1e3).getTime()-Date.now()-60*1e3;this.refreshTokenTimeout=setTimeout(()=>this.refreshToken().subscribe(),r)}else console.error("Invalid JWT token or missing expiration time."),this.logout()}}stopRefreshTokenTimer(){clearTimeout(this.refreshTokenTimeout)}static \u0275fac=function(e){return new(e||o)(n(k),n(c))};static \u0275prov=s({token:o,factory:o.\u0275fac,providedIn:"root"})};var S=class{constructor(t,e,r,a=!0,u=!1,l=!1){this.id=t;this.type=e;this.message=r;this.autoClose=a;this.keepAfterRouteChange=u;this.fade=l}};var O=class o{constructor(t){this.router=t;this.routerSubscription=this.router.events.pipe(D(e=>e instanceof B)).subscribe(()=>{this.keepAfterRouteChange?this.keepAfterRouteChange=!1:this.clear()})}subject=new C;keepAfterRouteChange=!1;routerSubscription;getAlert(){return this.subject.asObservable()}success(t,e){this.alert(b(m({},e),{type:"success",message:t}))}error(t,e){this.alert(b(m({},e),{type:"error",message:t}))}info(t,e){this.alert(b(m({},e),{type:"info",message:t}))}warn(t,e){this.alert(b(m({},e),{type:"warning",message:t}))}alert(t){if(!t.type||!t.message)throw new Error("Alert type and message are required");let e=new S(this.uniqueId(),t.type,t.message,t.autoClose??!0,t.keepAfterRouteChange??!1,t.fade??!1);this.keepAfterRouteChange=e.keepAfterRouteChange,this.subject.next(e)}clear(){this.subject.next(null)}uniqueId(){return crypto.randomUUID?.()??Math.random().toString(36).substring(2,9)}ngOnDestroy(){this.routerSubscription.unsubscribe()}static \u0275fac=function(e){return new(e||o)(n(k))};static \u0275prov=s({token:o,factory:o.\u0275fac,providedIn:"root"})};var I=class o{constructor(t){this.http=t}getByEmployeeId(t){return this.http.get(`${i.apiUrl}/workflows/employee/${t}`)}create(t){return this.http.post(`${i.apiUrl}/workflows`,t)}updateStatus(t,e){return this.http.put(`${i.apiUrl}/workflows/${t}/status`,{status:e})}static \u0275fac=function(e){return new(e||o)(n(c))};static \u0275prov=s({token:o,factory:o.\u0275fac,providedIn:"root"})};var h=class o{constructor(t,e){this.workflowService=t;this.accountService=e}trackDepartmentChange(t,e,r,a,u){let l=this.accountService.accountValue,d=l?l.email:"System",g=new Date().toLocaleString(),T=`Employee's department changed from ${a} (ID: ${e}) to ${u} (ID: ${r}) by ${d} on ${g}`,A={employeeId:t,type:"DepartmentChange",details:T};return this.workflowService.create(A)}trackRequestSubmission(t,e,r){let a=this.accountService.accountValue,u=a?a.email:"System",l=new Date().toLocaleString(),d=`New ${r} request (ID: ${e}) created by ${u} on ${l}`,g={employeeId:t,type:"RequestSubmission",details:d};return this.workflowService.create(g)}trackRequestStatusChange(t,e,r,a,u){let l=this.accountService.accountValue,d=l?l.email:"System",g=new Date().toLocaleString(),T=`${u} request (ID: ${e}) status changed from ${r} to ${a} by ${d} on ${g}`,A={employeeId:t,type:"RequestStatusChange",details:T};return this.workflowService.create(A)}static \u0275fac=function(e){return new(e||o)(n(I),n(w))};static \u0275prov=s({token:o,factory:o.\u0275fac,providedIn:"root"})};var j=class o{constructor(t){this.http=t}getAll(){return this.http.get(`${i.apiUrl}/departments`)}getById(t){return this.http.get(`${i.apiUrl}/departments/${t}`)}create(t){return this.http.post(`${i.apiUrl}/departments`,t)}update(t,e){return this.http.put(`${i.apiUrl}/departments/${t}`,e)}delete(t){return this.http.delete(`${i.apiUrl}/departments/${t}`)}static \u0275fac=function(e){return new(e||o)(n(c))};static \u0275prov=s({token:o,factory:o.\u0275fac,providedIn:"root"})};var V=class o{constructor(t,e,r){this.http=t;this.workflowTrackerService=e;this.departmentService=r}getAll(){return this.http.get(`${i.apiUrl}/employees`)}getById(t){return this.http.get(`${i.apiUrl}/employees/${t}`)}create(t){return this.http.post(`${i.apiUrl}/employees`,t)}update(t,e){return this.getById(t).pipe(y(r=>r.departmentId!==e.departmentId?U({oldDept:this.departmentService.getById(r.departmentId),newDept:this.departmentService.getById(e.departmentId)}).pipe(y(a=>(this.workflowTrackerService.trackDepartmentChange(t,r.departmentId,e.departmentId,a.oldDept.name,a.newDept.name).subscribe({error:u=>console.error("Error tracking department change:",u)}),this.http.put(`${i.apiUrl}/employees/${t}`,e)))):this.http.put(`${i.apiUrl}/employees/${t}`,e)))}delete(t){return this.http.delete(`${i.apiUrl}/employees/${t}`)}static \u0275fac=function(e){return new(e||o)(n(c),n(h),n(j))};static \u0275prov=s({token:o,factory:o.\u0275fac,providedIn:"root"})};var q=class o{constructor(t,e){this.http=t;this.workflowTrackerService=e}getAll(){return this.http.get(`${i.apiUrl}/requests`)}getById(t){return this.http.get(`${i.apiUrl}/requests/${t}`)}create(t){return this.http.post(`${i.apiUrl}/requests`,t).pipe(H(e=>{e&&e.id&&e.employeeId?this.workflowTrackerService.trackRequestSubmission(e.employeeId,e.id,e.type).subscribe({next:()=>console.log("Workflow updated for new request"),error:r=>console.error("Error tracking request submission:",r)}):console.error("Cannot track request submission: Missing data in created request",e)}))}update(t,e){return this.getById(t).pipe(y(r=>(r.status!==e.status&&this.workflowTrackerService.trackRequestStatusChange(e.employeeId,t,r.status,e.status,e.type).subscribe({next:()=>console.log("Workflow updated for status change"),error:a=>console.error("Error tracking status change:",a)}),this.http.put(`${i.apiUrl}/requests/${t}`,e))))}delete(t){return this.http.delete(`${i.apiUrl}/requests/${t}`)}static \u0275fac=function(e){return new(e||o)(n(c),n(h))};static \u0275prov=s({token:o,factory:o.\u0275fac,providedIn:"root"})};export{i as a,w as b,O as c,j as d,I as e,V as f};
